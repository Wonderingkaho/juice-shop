# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - main

resources:
  - repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '7cc31c67-ef3f-485b-a614-b3ad0c8786bf'
  imageRepository: 'wonderingkahojuiceshop'
  containerRegistry: 'nginxplusingress.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'nginxplusingress2091b936-auth'
  azureSubscription: 'LHK - Azure PoC -Network(0531dae3-35f1-4131-87df-71f0455cf088)'
  acr.name: nginxplusingress
  acr.repo.name: helm/juice-shop
  HELM_EXPERIMENTAL_OCI: 1

  # Agent VM image name
  vmImageName: 'Default'


#stages:
  # - stage: Build
  #   displayName: Build stage
  #   jobs:
  #   - job: Build
  #     displayName: Build
  #     pool:
  #       vmImage: $(vmImageName)
  #     steps:
  #     - task: Docker@2
  #       displayName: Build and push an image to container registry
  #       inputs:
  #         command: buildAndPush
  #         repository: $(imageRepository)
  #         dockerfile: $(dockerfilePath)
  #         containerRegistry: $(dockerRegistryServiceConnection)
  #         tags: |
  #           $(tag)

  #     - upload: manifests
  #       artifact: manifests


#  - stage: Deploy
#    displayName: Deploy stage
jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      name: $(vmImageName)
    environment: 'Wonderingkahojuiceshop-7563.test'
    strategy:
      runOnce:
        deploy:
          steps:
            - task: Kubernetes@1
              displayName: Login to Kubernetes
              inputs:
                connectionType: 'Azure Resource Manager'
                azureSubscriptionEndpoint: $(azureSubscription)
                azureResourceGroup: 'ACW'
                useClusterAdmin: true
                kubernetesCluster: 'nginx-plus-ingress'
                command: login

            # Helm tool installer v1
            # Install Helm on an agent machine.
            - task: HelmInstaller@1
              inputs:
                helmVersionToInstall: 'latest'

            - task: AzureCLI@2
              displayName: Login to Azure Container Registry
              inputs:
                targetType: inline
                script:
                  helm registry login nginxplusingress.azurecr.io --username $(acr.pull.username) --password $(acr.pull.password)

            - task: HelmDeploy@0
              displayName: Helm Deploy
              inputs:
                # Azure Container Registry
                azureSubscriptionEndpointForACR: $(azureSubscription)
                azureResourceGroupForACR: "ACW"
                azureContainerRegistry: "nginxplusingress"
                connectionType: 'Azure Resource Manager'
                azureSubscription: $(azureSubscription)
                useClusterAdmin: true
                azureResourceGroup: 'ACW'
                kubernetesCluster: 'nginx-plus-ingress'
                namespace: 'test'
                command: 'install'
                chartType: 'Name'
                chartName: 'charts/helm/juice-shop'
                chartVersion: '3.14.3'
                valueFile: 'values.yaml'

            - task: KubernetesManifest@0
              displayName: Create DashboardSecret
              inputs:
                action: deploy
                namespace: 'demo'
                manifests: |
                  $(Pipeline.Workspace)/manifests/juice-shop-dashboard-secret.yml


              # - task: KubernetesManifest@0
              #   displayName: Deploy to Kubernetes cluster
              #   inputs:
              #     action: deploy
              #     manifests: |
              #       $(Pipeline.Workspace)/manifests/deployment.yml
              #       $(Pipeline.Workspace)/manifests/service.yml
              #     imagePullSecrets: |
              #       $(imagePullSecret)
              #     containers: |
              #       $(containerRegistry)/$(imageRepository):$(tag)

