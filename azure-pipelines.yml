# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - main

resources:
  - repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '7cc31c67-ef3f-485b-a614-b3ad0c8786bf'
  imageRepository: 'wonderingkahojuiceshop'
  containerRegistry: 'nginxplusingress.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'nginxplusingress2091b936-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


#stages:
  # - stage: Build
  #   displayName: Build stage
  #   jobs:
  #   - job: Build
  #     displayName: Build
  #     pool:
  #       vmImage: $(vmImageName)
  #     steps:
  #     - task: Docker@2
  #       displayName: Build and push an image to container registry
  #       inputs:
  #         command: buildAndPush
  #         repository: $(imageRepository)
  #         dockerfile: $(dockerfilePath)
  #         containerRegistry: $(dockerRegistryServiceConnection)
  #         tags: |
  #           $(tag)

  #     - upload: manifests
  #       artifact: manifests


#
#  - stage: Deploy
#    displayName: Deploy stage
#jobs:
#  - deployment: Deploy
#    displayName: Deploy
pool:
  vmImage: $(vmImageName)
environment: 'Wonderingkahojuiceshop-7563.test'
strategy:
  runOnce:
    deploy:
      steps:
        - task: HelmDeploy@0
          displayName: Helm Deploy
          inputs:
            # Azure Container Registry
            azureSubscriptionForACR: "LHK - Azure PoC -Network(0531dae3-35f1-4131-87df-71f0455cf088)"
            azureResourceGroupForACR: "ACW"
            azureContainerRegistry: "nginxplusingress"
            connectionType: 'Azure Resource Manager'
            azureSubscription: 'LHK - Azure PoC -Network(0531dae3-35f1-4131-87df-71f0455cf088)'
            azureResourceGroup: 'ACW'
            kubernetesCluster: 'nginx-plus-ingress'
            useClusterAdmin: true
            namespace: 'demo'
            command: 'install'
            chartType: 'Name'
            chartName: 'values.yaml'

        - task: KubernetesManifest@0
          displayName: Create DashboardSecret
          inputs:
            action: deploy
            namespace: 'demo'
            manifests: |
              $(Pipeline.Workspace)/manifests/juice-shop-dashboard-secret.yml

              # - task: KubernetesManifest@0
              #   displayName: Deploy to Kubernetes cluster
              #   inputs:
              #     action: deploy
              #     manifests: |
              #       $(Pipeline.Workspace)/manifests/deployment.yml
              #       $(Pipeline.Workspace)/manifests/service.yml
              #     imagePullSecrets: |
              #       $(imagePullSecret)
              #     containers: |
              #       $(containerRegistry)/$(imageRepository):$(tag)

